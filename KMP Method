class Kmp{
	String palabra;
	String texto;
	int[] regresos;
	int[] busqueda;
	Kmp(String palabra,String texto){
		this.palabra = palabra;
		this.texto = texto;
		Patron patron = new Patron(this.palabra);
		regresos = patron.getRegresos();
		busqueda = new int[this.texto.length()];
	}

	public ArrayList<Integer> buscar(){
		return search(this.palabra,this.texto,this.regresos,this.busqueda);
	}
	

	private ArrayList<Integer> search(String palabra,String texto, int[] regresos, int[] busqueda){
		ArrayList<Integer> ubicaciones = new ArrayList<Integer>();
		busqueda[0] = 0;
		for(int i=0;i<texto.length();i++){
		
			while(comprobar(texto,palabra,busqueda,i)==false){
				if(i==0 || busqueda[i-1] == -1){
					busqueda[i] = -1;
					break;
				}
				busqueda[i] = regresar(busqueda,regresos,i-1);
			}//Fin while.

			if(busqueda[i]==palabra.length()-1){
				ubicaciones.add(i);
				busqueda[i] = regresos[busqueda[i]];
			}
			
			if(i!=texto.length()-1)
				busqueda[i+1] = busqueda[i]+1;
		}//Fin for.


		return ubicaciones;
	}


	private boolean comprobar(String texto, String patron,int[] busqueda, int indice){
		int indice2 = busqueda[indice];
		if(patron.charAt(indice2) == texto.charAt(indice)) return true;
		return false;
	}

	private int regresar(int[] busqueda,int[] regresos,int indice){
		busqueda[indice] = regresos[busqueda[indice]];
		return busqueda[indice]+1;
	}
}//Fin clase Kmp.
